###############################################################################
#
#  Welcome to Baml! To use this generated code, please run the following:
#
#  $ pip install baml
#
###############################################################################

# This file was generated by BAML: please do not edit it. Instead, edit the
# BAML files and re-generate this code.
#
# ruff: noqa: E501,F401
# flake8: noqa: E501,F401
# pylint: disable=unused-import,line-too-long
# fmt: off
import baml_py
from enum import Enum
from pydantic import BaseModel, ConfigDict
from typing import Dict, List, Optional, Union, Literal

from . import types
from .types import Checked, Check

###############################################################################
#
#  These types are used for streaming, for when an instance of a type
#  is still being built up and any of its fields is not yet fully available.
#
###############################################################################


class Awards(BaseModel):
    awards: List["Certificates"]

class BasicDetails(BaseModel):
    contacts: Optional["Contacts"] = None
    links: Optional["Links"] = None
    about_me: Optional[str] = None

class Certificates(BaseModel):
    name: Optional[str] = None
    awarded_by: Optional[str] = None

class Company(BaseModel):
    name: Optional[str] = None
    position: Optional[str] = None
    startdate: Optional[str] = None
    enddate: Optional[str] = None
    years: Optional[int] = None
    description_of_work: Optional[str] = None

class Contacts(BaseModel):
    name: Optional[str] = None
    title: Optional[str] = None
    email: Optional[str] = None
    phone: Optional[str] = None
    websiteURL: Optional[str] = None

class Education(BaseModel):
    universities: List["University"]

class Experience(BaseModel):
    companies: List["Company"]

class Links(BaseModel):
    linkedin: Optional[str] = None
    github: Optional[str] = None
    others: List[Optional[str]]

class PersonalProjects(BaseModel):
    projects: List["Project"]

class Project(BaseModel):
    name: Optional[str] = None
    technologies_used: List[Optional[str]]
    description_of_work: List[Optional[str]]

class Resume(BaseModel):
    basic_details: Optional["BasicDetails"] = None
    skills_and_expertise: Optional["SkillsAndExpertise"] = None
    education: Optional["Education"] = None
    experience: Optional["Experience"] = None
    projects: Optional["PersonalProjects"] = None
    awards: Optional["Awards"] = None

class SkillsAndExpertise(BaseModel):
    programming_languages_known: List[Optional[str]]
    frameworks_known: List[Optional[str]]
    technologies_used: List[Optional[str]]
    languagees_known: List[Optional[str]]

class University(BaseModel):
    name: Optional[str] = None
    degree: Optional[str] = None
    major: Optional[str] = None
    score: Optional[str] = None
    startdate: Optional[str] = None
    enddate: Optional[str] = None
